{"version":3,"file":"vonage-real-time-stats.js","mappings":"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","sources":["webpack://RealTimeStats/webpack/universalModuleDefinition","webpack://RealTimeStats/./node_modules/events/events.js","webpack://RealTimeStats/./lib/RealTimeStats.ts","webpack://RealTimeStats/./lib/utils/publisher.ts","webpack://RealTimeStats/webpack/bootstrap","webpack://RealTimeStats/./lib/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RealTimeStats\"] = factory();\n\telse\n\t\troot[\"RealTimeStats\"] = factory();\n})(self, () => {\nreturn ","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","import { getRtcStats } from './utils/publisher';\nimport { EventEmitter } from 'events';\nimport {\n  QualityEvent,\n  RTCStatsReport,\n  PacketLossEvent,\n  RealTimeOptions,\n  PublisherRtcStatsReportArr,\n  OT,\n} from './types';\n\nexport interface VideoNetworkQualityStats {\n  on(event: 'qualityLimited', listener: (event: QualityEvent) => void): this;\n  on(\n    event: 'qualityLimitedStopped',\n    listener: (event: QualityEvent) => void\n  ): this;\n  on(event: 'highPacketLoss', listener: (event: PacketLossEvent) => void): this;\n  on(\n    event: 'highPacketLossStopped',\n    listener: (event: PacketLossEvent) => void\n  ): this;\n}\n\nexport class VideoNetworkQualityStats extends EventEmitter {\n  private _publisher: OT.Publisher;\n  public _statsInterval: number;\n  private _interval: any;\n  private prevTimeStamp: any;\n  private prevPacketsSent: any;\n  private simulcastLayers: any;\n  private isQualityLimited: boolean;\n  private wasQualityLimited: boolean;\n  private hasPacketLoss: boolean;\n  private hadPacketLoss: boolean;\n  private prevPacketsLost: any;\n  private packetLossArray: any;\n  private layersWithPacketLoss: any;\n  public _VideoPacketLossThreshold: number;\n\n  constructor(options: RealTimeOptions) {\n    super();\n    this.prevTimeStamp = {};\n    this.simulcastLayers = [];\n    this.prevPacketsSent = {};\n    this._publisher;\n    this._statsInterval = options.intervalStats || 5000;\n    this._VideoPacketLossThreshold = options.VideoPacketLossThreshold || 5;\n    this._interval = null;\n    this.isQualityLimited = false;\n    this.wasQualityLimited = false;\n    this.hasPacketLoss = false;\n    this.hadPacketLoss = false;\n    this.prevPacketsSent = {};\n    this.prevPacketsLost = {};\n    this.packetLossArray = [];\n    this.layersWithPacketLoss = [];\n  }\n\n  /**\n   * Sets the publisher\n   * @param publisher represents the publisher\n   */\n\n  setPublisher(publisher: OT.Publisher) {\n    this._publisher = publisher;\n  }\n\n  /**\n   * Get the simulcast layers if the stream is simulcast capable\n   */\n\n  getSimulcastLayers() {\n    if (this.simulcastLayers.length) {\n      return this.simulcastLayers;\n    } else return [];\n  }\n\n  /**\n   * Check if the quality of your outbound stream is limited due to CPU or bandwidth\n   * @param stats represents the array or rtcStatsReport\n   */\n\n  checkIfQualityLimited(stats: PublisherRtcStatsReportArr) {\n    stats[0].rtcStatsReport.forEach((e: RTCStatsReport) => {\n      if (e.type === 'outbound-rtp' && e.kind === 'video') {\n        if (this.prevTimeStamp[e.ssrc] && this.prevPacketsSent[e.ssrc]) {\n          const timedif = e.timestamp - this.prevTimeStamp[e.ssrc];\n          const bytesDif = e.bytesSent - this.prevPacketsSent[e.ssrc];\n          const bitSec = (8 * bytesDif) / timedif;\n          if (e.framesPerSecond) {\n            const newLayers = {\n              width: e.frameWidth,\n              height: e.frameHeight,\n              framesPerSecond: e.framesPerSecond,\n              qualityLimitationReason: e.qualityLimitationReason,\n              id: e.ssrc,\n              bytes: bitSec,\n              packetsDiff: e.packetsSent - this.prevPacketsSent[e.ssrc],\n              // rtt: result?.rtt ? result.rtt : 0,\n            };\n\n            this.simulcastLayers = [...this.simulcastLayers, newLayers];\n\n            this.simulcastLayers.forEach((layer: any) => {\n              if (\n                layer.qualityLimitationReason !== 'none' &&\n                this.isQualityLimited === false &&\n                !this.wasQualityLimited\n              ) {\n                this.isQualityLimited = true;\n                this.emit('qualityLimited', {\n                  streamId: this._publisher?.stream?.id,\n                  reason: layer.qualityLimitationReason,\n                  id: layer.id,\n                  currentResolution: `${layer.width}X${layer.height}`,\n                });\n              } else if (\n                this.wasQualityLimited &&\n                layer.qualityLimitationReason === 'none' &&\n                this.isQualityLimited\n              ) {\n                this.isQualityLimited = false;\n                this.emit('qualityLimitedStopped', {\n                  streamId: this._publisher?.stream?.id,\n                  reason: layer.qualityLimitationReason,\n                });\n              }\n            });\n          }\n        }\n\n        this.prevPacketsSent[e.ssrc] = e.packetsSent;\n        this.prevTimeStamp[e.ssrc] = e.timestamp;\n\n        this.wasQualityLimited = this.isQualityLimited;\n      }\n    });\n  }\n\n  /**\n   * calculate if video packet loss is above the threshold\n   * @param stats represents the array or rtcStatsReport\n   */\n\n  checkVideoPacketLoss(stats: PublisherRtcStatsReportArr): void {\n    stats[0].rtcStatsReport.forEach((e: RTCStatsReport) => {\n      if (e.type === 'remote-inbound-rtp' && e.kind === 'video') {\n        const rttObject = {\n          ssrc: e.ssrc,\n          rtt: e.roundTripTime,\n          jitter: e.jitter,\n          packetLostFraction: e.fractionLost * 100,\n          packetsLostDiff: e.packetsLost - this.prevPacketsLost[e.ssrc],\n        };\n        this.packetLossArray = [...this.packetLossArray, rttObject];\n\n        this.prevPacketsLost[e.ssrc] = e.packetsLost;\n        this.mergeArrays();\n      }\n    });\n  }\n\n  /**\n   * processing of both arrays to calculate packet loss and emit the event if needed\n   */\n\n  mergeArrays(): void {\n    if (this.packetLossArray && this.simulcastLayers.length) {\n      this.layersWithPacketLoss = [];\n      // console.log(simulcastDef);\n      for (let layer of this.simulcastLayers) {\n        for (let rttLayer of this.packetLossArray) {\n          if (layer.id === rttLayer.ssrc && layer.framesPerSecond) {\n            const packetsTotal = layer.packetsDiff + rttLayer.packetsLostDiff;\n            const packetLostValue = rttLayer.packetsLostDiff / packetsTotal;\n\n            const obj = {\n              rtt: rttLayer.rtt,\n              jitter: rttLayer.jitter,\n              // packetLostFraction: rttLayer.packetLostFraction,\n              packetLost: packetLostValue * 100,\n              ...layer,\n            };\n            this.layersWithPacketLoss = [...this.layersWithPacketLoss, obj];\n\n            const maxSsrc = Math.max.apply(\n              Math,\n              this.layersWithPacketLoss.map(function(layer: any) {\n                return layer.id;\n              })\n            );\n            const upperLayer = this.layersWithPacketLoss.find(function(\n              layer: any\n            ) {\n              return layer.id == maxSsrc;\n            });\n            if (\n              upperLayer.packetLost >= this._VideoPacketLossThreshold &&\n              !this.hadPacketLoss &&\n              !this.hasPacketLoss\n            ) {\n              this.hasPacketLoss = true;\n              this.emit('highPacketLoss', {\n                streamId: this._publisher?.stream?.id,\n                type: 'video',\n                action: 'highPacketLossDetected',\n                packetLossThreshold: this._VideoPacketLossThreshold,\n              });\n            } else if (\n              this.hadPacketLoss &&\n              this.hasPacketLoss &&\n              upperLayer.packetLost < this._VideoPacketLossThreshold\n            ) {\n              this.hasPacketLoss = false;\n              this.emit('highPacketLossStopped', {\n                streamId: this._publisher?.stream?.id,\n                type: 'video',\n                action: 'highPacketLossStopped',\n                packetLossThreshold: this._VideoPacketLossThreshold,\n              });\n            }\n          }\n        }\n      }\n      this.hadPacketLoss = this.hasPacketLoss;\n    }\n  }\n\n  /**\n   * start an interval that run getstats every X seconds. Configurable by the customer\n   */\n\n  async startStats(): Promise<void> {\n    return new Promise((res, rej) => {\n      setInterval(async () => {\n        this.simulcastLayers = [];\n        this.packetLossArray = [];\n        try {\n          if (\n            typeof this._publisher.getRtcStatsReport !== 'function' ||\n            !this._publisher\n          ) {\n            rej('Invalid publisher');\n          }\n          const stats = await getRtcStats(this._publisher);\n          if (stats && stats.length) {\n            //only chrome supports qualityLimited field in the outbound-rtp report\n            if (/chrome/i.test(navigator.userAgent)) {\n              this.checkIfQualityLimited(stats);\n            }\n            this.checkVideoPacketLoss(stats);\n            res();\n          } else rej('can not start rtcStats');\n        } catch (e) {\n          rej(e);\n        }\n      }, this._statsInterval);\n    });\n  }\n\n  /**\n   * stop the rtcstats interval\n   */\n\n  stopStats() {\n    clearInterval(this._interval);\n    this._interval = null;\n  }\n\n  /**\n   * returns the Srtp cipher used by the client\n   */\n\n  async getCipher(): Promise<string> {\n    return new Promise(async (res, rej) => {\n      try {\n        const stats = await getRtcStats(this._publisher);\n        if (!stats) rej('Can not get cypher');\n        stats[0].rtcStatsReport.forEach((e: any) => {\n          if (e.type === 'transport') {\n            res(e.srtpCipher);\n          }\n        });\n      } catch (e) {\n        rej(e);\n      }\n    });\n  }\n\n  /**\n   * Returns the connection type, either UDP, TURN-udp, TURN-tcp, TURN-tls\n   */\n\n  async getConnectionType(): Promise<string> {\n    return new Promise(async (res, rej) => {\n      try {\n        const stats = await getRtcStats(this._publisher);\n        if (!stats) rej('Can not get connection type');\n        stats[0].rtcStatsReport.forEach((e: any) => {\n          if (e.type === 'local-candidate') {\n            if (e.candidateType === 'relay') {\n              res(`TURN ${e.relayProtocol}`);\n            } else {\n              res(e.protocol);\n            }\n          }\n        });\n      } catch (e) {\n        rej(e);\n      }\n    });\n  }\n}\n","import { OT, PublisherRtcStatsReport } from '../types';\n\nexport async function getRtcStats(publisher: OT.Publisher): Promise<any> {\n  return new Promise(async (res, rej) => {\n    try {\n      if (typeof publisher.getRtcStatsReport !== 'function') {\n        rej('Invalid publisher');\n      }\n      const stats = await publisher.getRtcStatsReport();\n      res(stats);\n    } catch (e) {\n      rej(e);\n    }\n  });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { getRtcStats } from './utils/publisher';\n\nimport { VideoNetworkQualityStats } from './RealTimeStats';\n\nwindow.OT = window.OT || {};\n\nwindow.OT.RealTimeStats = {\n  VideoNetworkQualityStats,\n};\n\nexport { VideoNetworkQualityStats };\n"],"names":["root","factory","exports","module","define","amd","self","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","once","emitter","name","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","length","warned","w","Error","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","i","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","VideoNetworkQualityStats","constructor","options","super","prevTimeStamp","simulcastLayers","prevPacketsSent","_publisher","_statsInterval","intervalStats","_VideoPacketLossThreshold","VideoPacketLossThreshold","_interval","isQualityLimited","wasQualityLimited","hasPacketLoss","hadPacketLoss","prevPacketsLost","packetLossArray","layersWithPacketLoss","setPublisher","publisher","getSimulcastLayers","checkIfQualityLimited","stats","rtcStatsReport","forEach","e","kind","ssrc","timedif","timestamp","bitSec","bytesSent","framesPerSecond","newLayers","width","frameWidth","height","frameHeight","qualityLimitationReason","id","bytes","packetsDiff","packetsSent","layer","streamId","stream","reason","currentResolution","checkVideoPacketLoss","rttObject","rtt","roundTripTime","jitter","packetLostFraction","fractionLost","packetsLostDiff","packetsLost","mergeArrays","rttLayer","packetsTotal","packetLostValue","obj","packetLost","maxSsrc","Math","max","map","upperLayer","find","action","packetLossThreshold","async","res","rej","setInterval","getRtcStatsReport","getRtcStats","test","navigator","userAgent","stopStats","clearInterval","srtpCipher","candidateType","relayProtocol","protocol","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","window","OT","RealTimeStats"],"sourceRoot":""}